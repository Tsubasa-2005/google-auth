/* tslint:disable */
/* eslint-disable */
/**
 * Google Login API
 * API to handle user registration and login using Google authentication
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request to register or log in a user using a Google JWT token and user information.
 * @export
 * @interface SignInRequest
 */
export interface SignInRequest {
    /**
     * Unique email address of the user
     * @type {string}
     * @memberof SignInRequest
     */
    email: string;
    /**
     * Name of the user
     * @type {string}
     * @memberof SignInRequest
     */
    name: string;
    /**
     * URL to the user's profile image
     * @type {string}
     * @memberof SignInRequest
     */
    imageURL: string;
    /**
     * Google JWT token provided after Google authentication
     * @type {string}
     * @memberof SignInRequest
     */
    token: string;
}

/**
 * Check if a given object implements the SignInRequest interface.
 */
export function instanceOfSignInRequest(value: object): value is SignInRequest {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('imageURL' in value) || value['imageURL'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    return true;
}

export function SignInRequestFromJSON(json: any): SignInRequest {
    return SignInRequestFromJSONTyped(json, false);
}

export function SignInRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignInRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'name': json['name'],
        'imageURL': json['imageURL'],
        'token': json['token'],
    };
}

  export function SignInRequestToJSON(json: any): SignInRequest {
      return SignInRequestToJSONTyped(json, false);
  }

  export function SignInRequestToJSONTyped(value?: SignInRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'name': value['name'],
        'imageURL': value['imageURL'],
        'token': value['token'],
    };
}

